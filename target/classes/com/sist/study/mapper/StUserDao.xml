<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.sist.study.dao.StUserDao">

	<resultMap type="com.sist.study.model.StUser" id="StUserResultMap">
		<id column="USER_ID" property="userId"/>
		<result column="USER_PWD" property="userPwd"/>
		<result column="USER_NAME" property="userName"/>
		<result column="USER_EMAIL" property="userEmail"/>
		<result column="USER_TEL" property="userTel"/>
		<result column="USER_POINT" property="userPoint"/>
		<result column="USER_ADDRESS" property="userAddress"/>
		<result column="USER_BIRTH" property="userBirth"/>
		<result column ="STATUS" property="status" /> 
		<result column ="REG_DATE" property="regDate" /> 
	</resultMap>
	
	<resultMap type="com.sist.study.model.StPaymentApprove" id="StPaymentApproveResultMap">	
		<result column="CID" property="cid"/>
		<result column="TID" property="tid"/>
		<result column="PARTNER_ORDER_ID" property="partnerOrderId"/>
		<result column="PARTNER_USER_ID" property="partnerUserId"/>
		<result column="ITEM_CODE" property="itemCode"/>
		<result column="ITEM_NAME" property="itemName"/>
		<result column="TOTAL_AMOUNT" property="totalAmount"/>
		<result column="TAX_FREE_AMOUNT" property="taxFreeAmount"/>
		<result column="STATUS" property="status"/>
		<result column="APPROVED_AT" property="approvedAt"/>
		<result column ="POINT" property="point" />
	</resultMap>
	
	<resultMap type="com.sist.study.model.StPaymentCancel" id="StPaymentCancelResultMap">	
		<result column="CID" property="cid"/>
		<result column="TID" property="tid"/>
		<result column="PARTNER_ORDER_ID" property="partnerOrderId"/>
		<result column="PARTNER_USER_ID" property="partnerUserId"/>
		<result column="ITEM_CODE" property="itemCode"/>
		<result column="ITEM_NAME" property="itemName"/>
		<result column="CANCEL_TOTAL_AMOUNT" property="cancelTotalAmount"/>
		<result column="CANCEL_TAX_FREE_AMOUNT" property="cancelTaxFreeAmount"/>
		<result column="CANCELED_AT" property="canceledAt"/>
	</resultMap>
	
	<resultMap type="com.sist.study.model.ReBoard" id="ReBoardResultMap">
		<id column="REBOARD_SEQ" property="reBoardSeq"/>
		<result column="ITEM_SEQ" property="itemSeq"/>
		<result column="ITEM_NAME" property="itemName"/>
		<result column="USER_ID" property="userId"/>
		<result column="REBOARD_TITLE" property="reBoardTitle"/>
		<result column="REBOARD_CONTENT" property="reBoardContent"/>
		<result column="REBOARD_READ_CNT" property="reBoardReadCnt"/>
		<result column="REG_DATE" property="regDate"/>
		<result column="REBOARD_DEL_FLAG" property="reBoardDelFlag"/>
	</resultMap>
	
	<resultMap type="com.sist.study.model.ReBoardFile" id="ReBoardFileResultMap">
		<id column="REBOARD_SEQ" property="reBoardSeq"/>
		<result column="FILE_SEQ" property="fileSeq"/>
		<result column="FILE_ORG_NAME" property="fileOrgName"/>
		<result column="FILE_NAME" property="fileName"/>
		<result column="FILE_EXT" property="fileExt"/>
		<result column="FILE_SIZE" property="fileSize"/>
		<result column="REG_DATE" property="regDate"/>
	</resultMap>
	
	<resultMap type="com.sist.study.model.ReBoardReply" id="ReBoardReplyResultMap">	
		<id column="REBOARD_SEQ" property="reBoardSeq"/>
		<result column="REPLY_SEQ" property="replySeq"/>
		<result column="REBOARD_TITLE" property="reBoardTitle"/>
		<result column="USER_ID" property="userId"/>
		<result column="REPLY_GROUP" property="replyGroup"/>
		<result column="REPLY_ORDER" property="replyOrder"/>
		<result column="REPLY_CONTENT" property="replyContent"/>
		<result column="REG_DATE" property="regDate"/>
		<result column="STATUS" property="status"/>
	</resultMap>
	
	
	<resultMap type="com.sist.study.model.QnaBoard" id="QnABoardResultMap">
		<id column="QNABOARD_SEQ" property="qnaBoardSeq"/>
		<result column="USER_ID" property="userId"/>
		<result column="QNABOARD_TITLE" property="qnaBoardTitle"/>
		<result column="QNABOARD_CONTENT" property="qnaBoardContent"/>
		<result column="STATUS" property="status"/>
		<result column="REG_DATE" property="regDate"/>
		<result column="SECRET_FLAG" property="secretFlag"/>
		<result column="REPLY_FLAG" property="replyFlag"/>		
	</resultMap>
	
	<resultMap type="com.sist.study.model.QnaFile" id="QnAFileResultMap">
		<id column="QNABOARD_SEQ" property="qnaBoardSeq"/>
		<id column="QNABOARD_FILE_SEQ" property="qnaBoardFileSeq"/>
		<result column="FILE_ORG_NAME" property="fileOrgName"/>
		<result column="FILE_NAME" property="fileName"/>
		<result column="FILE_EXT" property="fileExt"/>
		<result column="FILE_SIZE" property="fileSize"/>
		<result column="REG_DATE" property="regDate"/>
	</resultMap>
	
	<resultMap type="com.sist.study.model.QnaReply" id="QnAReplyResultMap">
		<id column="QNAREPLY_SEQ" property="qnareplySeq"/>
		<id column="QNABOARD_SEQ" property="qnaboardSeq"/>
		<result column="MANAGER_ID" property="managerId"/>
		<result column="REPLY_CONTENT" property="replyContent"/>
		<result column="REG_DATE" property="regDate"/>
	</resultMap>
	
	
	<select id="stUserSelect" parameterType="String" resultMap="StUserResultMap">
		SELECT USER_ID, 
		       NVL(USER_PWD, '') USER_PWD, 
		       NVL(USER_NAME, '') USER_NAME, 
		       NVL(USER_EMAIL, '') USER_EMAIL,
		       NVL(USER_TEL, '') USER_TEL,
		       NVL(USER_POINT, 0) USER_POINT,
		       NVL(USER_ADDRESS, '') USER_ADDRESS,
		       NVL(USER_BIRTH, '') USER_BIRTH,
			   NVL(STATUS, 'N') STATUS, 
			   NVL(TO_CHAR(REG_DATE, 'YYYY-MM-DD HH24:MI:SS'), '') REG_DATE
		  FROM ST_USER 
		 WHERE USER_ID = #{value}
	</select>
	
	<update id="stUserUpdate" parameterType="com.sist.study.model.StUser">
		UPDATE ST_USER
		   SET USER_PWD = #{userPwd},
		       USER_NAME = #{userName},
		       USER_EMAIL = #{userEmail},
		       USER_TEL = #{userTel},
		       USER_BIRTH = #{userBirth},
		       USER_ADDRESS = #{userAddress}
		 WHERE USER_ID = #{userId}
	</update>
	
	<update id="stUserPointUpdate" parameterType="com.sist.study.model.StUser">
		UPDATE ST_USER
		   SET USER_POINT = #{userPoint}
		 WHERE USER_ID = #{userId}
	</update>
	
	<update id="stUserResign" parameterType="com.sist.study.model.StUser">
		UPDATE ST_USER
		   SET STATUS = #{status}
		 WHERE USER_ID = #{userId} 
	</update>
	
	<select id="stPaymentApproveListCount" parameterType="String" resultType="long">
		SELECT COUNT(PARTNER_USER_ID) CNT
	  	  FROM ST_PAYMENT_APPROVE
	 	  WHERE PARTNER_USER_ID = #{partnerUserId}
	</select>
	
	<select id="stPaymentApproveList" parameterType="com.sist.study.model.StPaymentApprove" resultMap="StPaymentApproveResultMap">
		SELECT CID,
		       TID,
		       PARTNER_ORDER_ID,
		       PARTNER_USER_ID,
		       ITEM_CODE,
		       ITEM_NAME,
		       TOTAL_AMOUNT,
		       TAX_FREE_AMOUNT,
		       STATUS,
		       POINT,
		       APPROVED_AT
		  FROM (SELECT ROWNUM RNUM,
		               CID,
		               TID,
		               PARTNER_ORDER_ID,
		               PARTNER_USER_ID,
		               ITEM_CODE,
		               ITEM_NAME,
		               TOTAL_AMOUNT,
		               TAX_FREE_AMOUNT,
		               STATUS,
		               POINT,
		               APPROVED_AT
		          FROM (SELECT CID,
		                       TID,
		                       PARTNER_ORDER_ID,
		                       PARTNER_USER_ID,
		                       ITEM_CODE,
		                       ITEM_NAME,
		                       TOTAL_AMOUNT,
		                       TAX_FREE_AMOUNT,
		                       STATUS,
		                       POINT,
		                       TO_CHAR(APPROVED_AT, 'YYYY-MM-DD HH24:MI:SS') APPROVED_AT
		                  FROM ST_PAYMENT_APPROVE
		                 WHERE PARTNER_USER_ID = #{partnerUserId} 
		                  ORDER BY APPROVED_AT DESC))
	  	 WHERE RNUM <![CDATA[>=]]> #{startRow}
		   AND RNUM <![CDATA[<=]]> #{endRow}      
	</select>
	
	<select id="stPaymentCancelListCount" parameterType="String" resultType="long">
		SELECT COUNT(PARTNER_USER_ID) CNT
	  	  FROM ST_PAYMENT_CANCEL
	 	  WHERE PARTNER_USER_ID = #{partnerUserId}
	</select>
	
	<select id="stPaymentCancelList" parameterType="com.sist.study.model.StPaymentCancel" resultMap="StPaymentCancelResultMap">
		SELECT CID,
		       TID,
		       PARTNER_ORDER_ID,
		       PARTNER_USER_ID,
		       ITEM_CODE,
		       ITEM_NAME,
			   CANCEL_TOTAL_AMOUNT,
		       CANCEL_TAX_FREE_AMOUNT,
		       CANCELED_AT
		  FROM (SELECT ROWNUM RNUM,
		               CID,
		               TID,
		               PARTNER_ORDER_ID,
		               PARTNER_USER_ID,
		               ITEM_CODE,
		               ITEM_NAME,
		               CANCEL_TOTAL_AMOUNT,
		               CANCEL_TAX_FREE_AMOUNT,
		               CANCELED_AT
		          FROM (SELECT CID,
						       TID,
						       PARTNER_ORDER_ID,
						       PARTNER_USER_ID,
						       ITEM_CODE,
						       ITEM_NAME,
						       CANCEL_TOTAL_AMOUNT,
						       CANCEL_TAX_FREE_AMOUNT,
						       TO_CHAR(CANCELED_AT, 'YYYY-MM-DD HH24:MI:SS') CANCELED_AT
						  FROM ST_PAYMENT_CANCEL
		                 WHERE PARTNER_USER_ID = #{partnerUserId} 
		                  ORDER BY CANCELED_AT DESC))
	  	 WHERE RNUM <![CDATA[>=]]> #{startRow}
		   AND RNUM <![CDATA[<=]]> #{endRow}      
	</select>
	
	<select id="stPaymentApproveSelect" parameterType="String" resultMap="StPaymentApproveResultMap">
			SELECT CID,
			       TID,
			       PARTNER_ORDER_ID,
			       PARTNER_USER_ID,
			       ITEM_CODE,
			       ITEM_NAME,
			       TOTAL_AMOUNT,
			       TAX_FREE_AMOUNT,
			       STATUS,
			       POINT,
			       TO_CHAR(APPROVED_AT, 'YYYY-MM-DD HH24:MI:SS') APPROVED_AT
			  FROM ST_PAYMENT_APPROVE
			 WHERE PARTNER_ORDER_ID = #{value}
	</select>
	
	<update id="stPaymentApproveUpdate" parameterType="com.sist.study.model.StPaymentApprove">
		UPDATE ST_PAYMENT_APPROVE
		   SET STATUS = #{status}  
		 WHERE PARTNER_USER_ID = #{partnerUserId}
		   AND PARTNER_ORDER_ID = #{partnerOrderId}
	</update>

	 <insert id="stPaymentCancelInsert" parameterType="com.sist.study.model.StPaymentCancel">
		INSERT INTO ST_PAYMENT_CANCEL (CID, TID, PARTNER_ORDER_ID, PARTNER_USER_ID, ITEM_CODE, ITEM_NAME, CANCEL_TOTAL_AMOUNT, CANCEL_TAX_FREE_AMOUNT, CANCELED_AT)
		VALUES (#{cid}, #{tid}, #{partnerOrderId}, #{partnerUserId}, #{itemCode}, #{itemName}, #{cancelTotalAmount}, #{cancelTaxFreeAmount}, SYSDATE)
	</insert>
	
	<select id="stUserReviewListCount" parameterType="com.sist.study.model.ReBoard" resultType="long">
		SELECT COUNT(REBOARD_SEQ)
		  FROM ST_REBOARD
		 WHERE USER_ID = #{userId}
	</select>
	
	<select id="stUserReviewList" parameterType="com.sist.study.model.ReBoard" resultMap="ReBoardResultMap">
		
		SELECT REBOARD_SEQ,
	           ITEM_SEQ,
               ITEM_NAME,
	           USER_ID,
	           REBOARD_TITLE,
	           REBOARD_CONTENT,
	           REBOARD_READ_CNT,
	           REBOARD_DEL_FLAG,
	           REG_DATE
	      FROM (SELECT ROWNUM RNUM,
	                   REBOARD_SEQ,
	                   ITEM_SEQ,
                       ITEM_NAME,
	                   USER_ID,
	                   REBOARD_TITLE,
	                   REBOARD_CONTENT,
	                   REBOARD_READ_CNT,
	                   REBOARD_DEL_FLAG,
	                   REG_DATE
	              FROM (SELECT RB.REBOARD_SEQ REBOARD_SEQ,
	                           NVL(RB.ITEM_SEQ, 0) ITEM_SEQ,
                               NVL(IDA.ITEM_NAME, '') ITEM_NAME,
	                           NVL(RB.USER_ID, 0) USER_ID,
	                           NVL(RB.REBOARD_TITLE, '') REBOARD_TITLE,
	                           NVL(RB.REBOARD_CONTENT, '') REBOARD_CONTENT,
	                           NVL(RB.REBOARD_READ_CNT, 0) REBOARD_READ_CNT,
	                           NVL(RB.REBOARD_DEL_FLAG, '') REBOARD_DEL_FLAG,
	                           NVL(TO_CHAR(RB.REG_DATE, 'YYYY-MM-DD HH24:MI:SS'), '') REG_DATE
	                      FROM ST_REBOARD RB, ST_ITEM_DATA IDA
	                     WHERE USER_ID = #{userId}
                           AND RB.ITEM_SEQ = IDA.ITEM_SEQ
		              ORDER BY REBOARD_SEQ DESC))
		 WHERE RNUM <![CDATA[>=]]> #{startRow}
		   AND RNUM <![CDATA[<=]]> #{endRow}
	</select>	
	
	<select id="stUserReviewSelect" parameterType="long" resultMap="ReBoardResultMap">
		SELECT REBOARD_SEQ,
               NVL(ITEM_SEQ, 0) ITEM_SEQ,
               NVL(USER_ID, 0) USER_ID,
               NVL(REBOARD_TITLE, '') REBOARD_TITLE,
               NVL(REBOARD_CONTENT, '') REBOARD_CONTENT,
               NVL(REBOARD_READ_CNT, 0) REBOARD_READ_CNT,
               NVL(REBOARD_DEL_FLAG, '') REBOARD_DEL_FLAG,
               NVL(TO_CHAR(REG_DATE, 'YYYY-MM-DD HH24:MI:SS'), '') REG_DATE
          FROM ST_REBOARD
		 WHERE REBOARD_SEQ = #{value}
	</select>
	
	<select id="stUserReplyListCount" parameterType="com.sist.study.model.ReBoardReply" resultType="long">
		SELECT COUNT(REPLY_SEQ)
		  FROM ST_REBOARD_REPLY
		 WHERE USER_ID = #{userId}
		   AND STATUS = 'N'
	</select>
	
	<select id="stUserReplyList" parameterType="com.sist.study.model.ReBoardReply" resultMap="ReBoardReplyResultMap">
		SELECT REBOARD_SEQ,
		       REPLY_SEQ,
		       REBOARD_TITLE,
		       USER_ID,
		       REPLY_GROUP,
		       REPLY_ORDER,
		       REPLY_CONTENT,
		       REG_DATE,
		       STATUS
		  FROM (SELECT ROWNUM RNUM,
		               REBOARD_SEQ,
		               REBOARD_TITLE,
		               REPLY_SEQ,
		               USER_ID,
		               REPLY_GROUP,
		               REPLY_ORDER,
		               REPLY_CONTENT,
		               REG_DATE,
		               STATUS
		          FROM (SELECT RR.REBOARD_SEQ,
		                       RR.REPLY_SEQ,
		                       NVL(RB.REBOARD_TITLE, '') REBOARD_TITLE,
		                       NVL(RR.USER_ID, '') USER_ID,
		                       NVL(RR.REPLY_GROUP, 0) REPLY_GROUP,
		                       NVL(RR.REPLY_ORDER, 0) REPLY_ORDER,
		                       NVL(RR.REPLY_CONTENT, '') REPLY_CONTENT,
		                       NVL(TO_CHAR(RR.REG_DATE, 'YYYY-MM-DD HH24:MI:SS'), '') REG_DATE,
		                       NVL(RR.STATUS, 'N') STATUS
		                  FROM ST_REBOARD_REPLY RR, ST_REBOARD RB
		                 WHERE RR.USER_ID = #{userId}
		                   AND RR.REBOARD_SEQ = RB.REBOARD_SEQ
						   AND STATUS = 'N'
		                 ORDER BY REPLY_SEQ DESC))  
		 WHERE RNUM <![CDATA[>=]]> #{startRow}
		   AND RNUM <![CDATA[<=]]> #{endRow}
	</select>
	

	<select id="stUserQnaBoardListCount" parameterType="com.sist.study.model.QnaBoard" resultType="long">
		SELECT COUNT(QNABOARD_SEQ)
	  	  FROM ST_QNABOARD
	  	 WHERE USER_ID = #{userId}
	</select>
	
	<select id="stUserQnaBoardList" parameterType="com.sist.study.model.QnaBoard" resultMap="QnABoardResultMap">
		SELECT QNABOARD_SEQ,
		       USER_ID,
		       QNABOARD_TITLE,
		       QNABOARD_CONTENT,
		       STATUS,
		       SECRET_FLAG,
		       REPLY_FLAG,
		       REG_DATE
		  FROM (SELECT ROWNUM RNUM,
		               QNABOARD_SEQ,
		               USER_ID,
		               QNABOARD_TITLE,
		               QNABOARD_CONTENT,
		               STATUS,
		               SECRET_FLAG,
		               REPLY_FLAG,
		               REG_DATE
		          FROM (SELECT QNABOARD_SEQ, 
		                       NVL(USER_ID, 0) USER_ID,
		                       NVL(QNABOARD_TITLE, '') QNABOARD_TITLE,
		                       NVL(QNABOARD_CONTENT, '') QNABOARD_CONTENT,
		                       NVL(STATUS, 'N') STATUS,
		                       NVL(SECRET_FLAG, 'N') SECRET_FLAG,
		                       NVL(REPLY_FLAG, 'N') REPLY_FLAG,
		                       NVL(TO_CHAR(REG_DATE, 'YYYY-MM-DD HH24:MI:SS'), '') REG_DATE
		                  FROM ST_QNABOARD
		                 WHERE USER_ID = #{userId}
		              ORDER BY QNABOARD_SEQ DESC))
		 WHERE RNUM <![CDATA[>=]]> #{startRow}
		   AND RNUM <![CDATA[<=]]> #{endRow}
	</select>
	
	
	
</mapper>